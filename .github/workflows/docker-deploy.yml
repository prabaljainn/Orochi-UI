name: Docker Build and Deploy

on:
  push:
    branches: [main, develop, feature/*, staging]
  pull_request:
    branches: [main]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm install --force

      - name: Build
        run: npm run build

      - name: Verify build artifacts
        run: |
          ls -la dist || true
          BUILD_DIR=$(find dist -type d -maxdepth 1 -not -path dist 2>/dev/null | head -1 || echo "dist")
          echo "BUILD_DIR=$BUILD_DIR" >> $GITHUB_ENV
          if [ ! -d "$BUILD_DIR" ]; then
            echo "Error: Build directory not found. Build step may have failed."
            exit 1
          fi

      - name: Test
        run: npm run test -- --watch=false --browsers=ChromeHeadless

      - name: Upload build artifacts
        uses: actions/upload-artifact@v2
        with:
          name: dist-artifacts
          path: ${{ env.BUILD_DIR }}

  build-and-push-docker:
    needs: build-and-test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Download build artifacts
        uses: actions/download-artifact@v2
        with:
          name: dist-artifacts
          path: dist/orochi-ui

      - name: Verify downloaded artifacts
        run: |
          ls -la dist || true
          ls -la dist/orochi-ui || true

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract branch name
        shell: bash
        run: echo "BRANCH_NAME=${GITHUB_REF#refs/heads/}" >> $GITHUB_ENV

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/orochi-ui:${{ env.BRANCH_NAME }}
            ${{ env.BRANCH_NAME == 'main' && format('{0}/orochi-ui:latest', secrets.DOCKER_USERNAME) || '' }}
