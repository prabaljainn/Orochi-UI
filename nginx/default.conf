
user  nginx;
worker_processes  1;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

events {
    worker_connections  1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    index    index.html;
    root    /usr/share/nginx/html;

    sendfile        on;
    tcp_nopush     on;

    keepalive_timeout  65;
    proxy_send_timeout 120;
    proxy_read_timeout 300;
    proxy_buffering    off;
    proxy_pass_request_headers      on;

    gzip  on;
    gzip_types application/javascript text/css application/json;
    gzip_min_length 1000;
    gzip_proxied any;
    gzip_vary on;

    map $http_host $hostValue {
        default   $http_host;
        ""        $host:$server_port;
    }

    server {
        listen       80;

        if ($accept_language ~ "^$") {
            set $accept_language "en";
        }

        # location /websocket {
        #     proxy_pass http://$NGINX_HOST:$NGINX_PORT/websocket;
        #     proxy_http_version 1.1;
        #     proxy_set_header Upgrade $http_upgrade;
        #     proxy_set_header Connection "upgrade";
        #     proxy_set_header Host $hostValue;
        #     proxy_set_header Origin http://$hostValue;
        #     proxy_set_header X-Real-IP $hostValue;
        #     proxy_set_header Sec-WebSocket-Protocol $http_sec_websocket_protocol;
        #     proxy_set_header Sec-WebSocket-Extensions $http_sec_websocket_extensions;
        #     proxy_set_header Sec-WebSocket-Accept $http_sec_websocket_accept;
        #     proxy_set_header Sec-WebSocket-Key $http_sec_websocket_key;
        #     proxy_set_header Sec-WebSocket-Version $http_sec_websocket_version;
        #     proxy_set_header K-app digitaltwin;
        # }

        # location /butics {
        #     proxy_pass http://$NGINX_HOST:$NGINX_PORT/butics;
        #     proxy_http_version 1.1;
        #     proxy_set_header Upgrade $http_upgrade;
        #     proxy_set_header Connection "upgrade";
        #     proxy_set_header Host $hostValue;
        #     proxy_set_header Origin http://$hostValue;
        #     proxy_set_header X-Real-IP $hostValue;
        #     proxy_set_header Sec-WebSocket-Protocol $http_sec_websocket_protocol;
        #     proxy_set_header Sec-WebSocket-Extensions $http_sec_websocket_extensions;
        #     proxy_set_header Sec-WebSocket-Accept $http_sec_websocket_accept;
        #     proxy_set_header Sec-WebSocket-Key $http_sec_websocket_key;
        #     proxy_set_header Sec-WebSocket-Version $http_sec_websocket_version;
        #     proxy_set_header K-app digitaltwin;
        # }

        # location ~ ^/(ui-api|analytics|api|swagger-ui|v3/api-docs|management|endpoints|auth|oauth2|saml2|login|msgraph|public|scim)(.*)$ {
        #     proxy_pass http://$NGINX_HOST:$NGINX_PORT/$1$2?$args;
        #     proxy_set_header Host $hostValue;
        #     proxy_set_header X-Real-IP $hostValue;
        #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        #     proxy_set_header X-Forwarded-Proto https;
        #     proxy_set_header K-app digitaltwin;
        # }

        # Use this block if translation are being used
        location ~ ^/(ar|en|es|ja|te|ar)/(.*)$ {
            try_files /$1/$2 /$1/index.html?$args;
        }

        # Use this block if translation are *NOT* being used
        # location ~ ^/(.*)$ {
        #     try_files /$1 /index.html?$args;
        # }

        location / {
            return 302 /$accept_language/;
        }
    }
}
